//******************************************************************************

#include  <msp430x16x.h>
#include "i2c.h"


int data[2];
void main (void)
{
  
  osc_init_xt2();
  WDTCTL = WDTPW + WDTHOLD;                 // Stop WDT
 
  CCTL0 = CCIE;             	// CCR0 habilita interrupción del timer
  CCR0 = 32-1;
  
  TACTL = TASSEL_1 + MC_1;    // reloj ACLK, modo up to CCR0
  adc_init_single_channel_single_conv(); // Inicializa el ADC en modo de conversión simple de un solo canal.
  
  
  i2c_init(0x48, I2C_MASTER);   // Setea registros para definir msp como master

  _BIS_SR(LPM0_bits + GIE);	// modo bajo consumo
  
  
  
  
  _EINT();                                  // Habilita interrupciones
  

}

  // Interrupciones 




// Timer A0 rutina de servicio de interrupción
#pragma vector = TIMERA0_VECTOR
__interrupt void Timer_A (void)

{ 
  data[0]=adc_single_channel_single_conv(0); // guarda una conversion analoga a digital en el arreglo data

  i2c_master_write(0x22, &data[0] , 2); // envia la informacion del arreglo al slave

  
  
}
